buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.novoda:bintray-release:0.3.4'
        // clean build bintrayUpload
    }
}

ext {
    configuration = [
            package          : "com.bartoszlipinski.rxanimationbinding",
            compileVersion   : 23,
            buildToolsVersion: "23.0.2",
            minSdk           : 11,
            targetSdk        : 23,
            versionCode      : 0,
            versionName      : "0.0.0"
    ]

    libraries = [
            rx_android: "1.1.0",
            rx_java   : "1.1.0",
            support   : "23.1.1"
    ]

    tests = [
            supportTest: "0.4.1",
            junit      : "4.12",
            truth      : "0.27",
            espresso   : "2.2.1"
    ]

    bintrayConfig = [
            userOrg     : "blipinsk",
            userName    : "Bartosz Lipinski",
            userEmail   : "bartoszlipinski90@gmail.com",
            groupId     : "com.bartoszlipinski",
            name        : "RxAnimationBinding",
            artifactRoot: "rxanimationbinding",
            description : "RxJava binding APIs for Android's Animations",
            website     : "https://github.com/blipinsk/RxAnimationBinding",
            gitUrl      : "https://github.com/blipinsk/RxAnimationBinding.git",
            licenses    : ["Apache-2.0"],
            licenseDesc : "The Apache Software License, Version 2.0"
    ]

    bintrayUser = BINTRAY_USERNAME
    bintrayKey = BINTRAY_API_KEY
    dryRun = 'true'
    isUploading = project.getGradle().startParameter.taskNames.any { it.contains('bintrayUpload') }
}

subprojects {
    repositories {
        jcenter()
    }

    group = bintrayConfig.groupId
    version = configuration.versionName

    if (isUploading && project.name in [bintrayConfig.artifactRoot]) {
        println project.name
        apply plugin: 'maven'

        gradle.taskGraph.whenReady { taskGraph ->
            taskGraph.getAllTasks().find {
                it.path == ":$project.name:generatePomFileForMavenPublication"
            }.doLast {
                file("build/publications/maven/pom-default.xml").delete()
                pom {
                    //noinspection GroovyAssignabilityCheck
                    project {
                        name project.name
                        artifactId project.name
                        packaging project.name == 'aar'
                        description bintrayConfig.description
                        url bintrayConfig.website
                        version configuration.versionName

                        scm {
                            url bintrayConfig.gitUrl
                            connection bintrayConfig.gitUrl
                            developerConnection bintrayConfig.gitUrl
                        }

                        licenses {
                            license {
                                name bintrayConfig.licenseDesc
                            }
                        }

                        developers {
                            developer {
                                id bintrayConfig.userOrg
                                name bintrayConfig.userName
                                email bintrayConfig.userEmail
                            }
                        }
                    }
                }.writeTo("build/publications/maven/pom-default.xml")
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}